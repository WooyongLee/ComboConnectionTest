<Window x:Class="ComboBrokerTest.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:ComboBrokerTest.ViewModel"
        xmlns:local="clr-namespace:ComboBrokerTest"
        xmlns:controls="clr-namespace:ComboBrokerTest.UIComponent"
        mc:Ignorable="d"
        Title="Dabin's RRA Control Simulator (MQTT Broker)" Height="500" Width="800">
    <Window.DataContext>
        <vm:MainViewModel />
    </Window.DataContext>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <!-- 애니메이션 정의 -->
        <Storyboard x:Key="ShowMenuStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="Width" To="200" Duration="0:0:0.25" />
        </Storyboard>
        <Storyboard x:Key="HideMenuStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="Width" To="0" Duration="0:0:0.25" />
        </Storyboard>

        <Style x:Key="RoundedButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="15" 
                                Padding="4"
                                SnapsToDevicePixels="True">
                            <ContentPresenter 
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="LightGray"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"></RowDefinition>
            <RowDefinition Height="8*"></RowDefinition>
            <RowDefinition Height="0.5*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Background="LightGray">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"></ColumnDefinition>
                <ColumnDefinition Width="2*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <DockPanel Grid.Column="0">
                <StackPanel Orientation="Horizontal">
                    <!-- 설정 아이콘 -->
                    <Button x:Name="ExpandSetting" Content=" ≡ " Command="{Binding ToggleMenuVisibilityCommand}" Style="{StaticResource RoundedButtonStyle}"
                            HorizontalAlignment="Left" VerticalAlignment="Top" 
                             Margin="10"
                            Visibility="{Binding IsMenuVisible, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>
                </StackPanel>
            </DockPanel>

            <StackPanel Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal" Margin="10">
                <Button Content=" Start/Stop " Command="{Binding ToggleServerCommand}" Margin="0,0,10,0" />
                <Button Content="{Binding ServerStatus}" IsEnabled="False" Width="100" />
            </StackPanel>

            <Border Grid.ColumnSpan="3" BorderThickness="1" BorderBrush="Gray"></Border>
        </Grid>

        <!-- 메뉴 패널 -->
        <Border x:Name="ExpandMenuBorder" Grid.RowSpan="2" Background="LightGray" DockPanel.Dock="Left" HorizontalAlignment="Left"
                    Visibility="{Binding IsMenuVisible, Converter={StaticResource BooleanToVisibilityConverter}}" 
                    Width="150" Panel.ZIndex="2" BorderThickness="1" BorderBrush="DarkGray">
            <StackPanel>
                <StackPanel.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Width" Value="170"></Setter>
                    </Style>
                </StackPanel.Resources>
                <StackPanel Orientation="Horizontal">
                    <Button x:Name="MinimizeSetting" Content=" ≡ " Command="{Binding ToggleMenuVisibilityCommand}" Style="{StaticResource RoundedButtonStyle}"
                            HorizontalAlignment="Left" VerticalAlignment="Top" 
                            Margin="10"/>

                    <TextBlock Text="Setting" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                </StackPanel>
                <controls:TextBlockWithBorder Text="TBD 1" Command="{Binding SettingMenuClickCommand}" CommandParameter="TBD 1"/>
                <controls:TextBlockWithBorder Text="TBD 2" Command="{Binding SettingMenuClickCommand}" CommandParameter="TBD 2"/>
                <controls:TextBlockWithBorder Text="TBD 3" Command="{Binding SettingMenuClickCommand}" CommandParameter="TBD 3"/>
            </StackPanel>
        </Border>

        <Grid Grid.Row="1">
            <Grid.Resources>
                <Style TargetType="Border">
                    <Setter Property="BorderBrush" Value="Gray"></Setter>
                    <Setter Property="BorderThickness" Value="1"></Setter>
                </Style>
            </Grid.Resources>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>

            <Border x:Name="MessageViewBorder" Grid.Column="0">
                <StackPanel Orientation="Vertical">
                    <TextBlock Margin="3" Text="Message View"/>
                    <TextBox Margin="1.5" Height="350" VerticalAlignment="Stretch"
                         Text=" 0x01 0x00        from client id(ip) ad83e9(192.168.xxx.xxx)"/>
                </StackPanel>
            </Border>

            <Border Grid.Column="1" >
                <StackPanel Orientation="Vertical">
                    <GroupBox x:Name="SendMessageGroupBox" Header="Send">
                        <Grid Margin="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"></ColumnDefinition>
                                <ColumnDefinition Width="1*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="SendMessageTextBox" Margin="2" ></TextBox>
                            <Button x:Name="SendMessageButton" Content=" Send Message " Margin="2" Grid.Column="1"></Button>
                        </Grid>
                    </GroupBox>

                    <GroupBox x:Name="ControlGroupBox" Header="Control">
                        <Grid Margin="3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"></RowDefinition>
                                <RowDefinition Height="1*"></RowDefinition>
                                <RowDefinition Height="1*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"></ColumnDefinition>
                                <ColumnDefinition Width="1*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal" Margin="0, 3">
                                <TextBlock Text=" Power " VerticalAlignment="Center"></TextBlock>
                                <controls:PowerSwitch Command="{Binding PowerSwitchCommand}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0, 3"
                                        Grid.ColumnSpan="2" Grid.Row="1">
                                <TextBlock Text=" IP Address " ></TextBlock>
                                <TextBox Width="120" Margin="2, 0"></TextBox>
                                <TextBlock Text=" Device ID " Margin="2, 0"></TextBlock>
                                <TextBox Width="30" Margin="2, 0"></TextBox>
                                <Button Content="Apply" Width="50" Margin="5, 0"></Button>
                            </StackPanel>
                        </Grid>
                        
                    </GroupBox>

                    <GroupBox x:Name="StatusViewGroupBox" Header="Status">
                        <Grid Margin="3">
                            <Grid.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Margin" Value="1"></Setter>
                                </Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Margin" Value="1"></Setter>
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"></RowDefinition>
                                <RowDefinition Height="1*"></RowDefinition>
                                <RowDefinition Height="1*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"></ColumnDefinition>
                                <ColumnDefinition Width="1*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="연결 상태 정보" ></TextBlock>
                            <Button Content=" 정상 연결 " Grid.Column="1" IsEnabled="False"></Button>

                            <TextBlock Text="외부 입력 신호 상태 정보" Grid.Row="1"></TextBlock>
                            <Button Content=" 1pps 및 Ext. 10MHz clock 입력 정상 검출 " Grid.Row="1" Grid.Column="1" IsEnabled="False"></Button>

                            <TextBlock Text="HW 상태 정보" Grid.Row="2"></TextBlock>
                            <Button Content=" 정상 동작 " Grid.Row="2" Grid.Column="1" IsEnabled="False"></Button>
                        </Grid>
                    </GroupBox>
                </StackPanel>
            </Border>
        </Grid>

        <StackPanel x:Name="LogPanel" Grid.Row="2" VerticalAlignment="Center" Background="LightGray">
            <Border VerticalAlignment="Center">
                <TextBlock Margin="5, 1" Text="{Binding LogMessage}"></TextBlock>
            </Border>
        </StackPanel>
    </Grid>

</Window>
